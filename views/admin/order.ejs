<%- include("../partials/admin/header.ejs") %>

<div class="container-fluid py-4">
    <div class="row">
        <main class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th class="align-middle text-center" style="width: 80px">Image</th>
                                    <th class="align-middle" style="width: 25%">Product</th>
                                    <th class="align-middle" style="width: 20%">Customer</th>
                                    <th class="align-middle text-center" style="width: 10%">Quantity</th>
                                    <th class="align-middle text-end" style="width: 15%">Price</th>
                                    <th class="align-middle" style="width: 15%">Status</th>
                                    <th class="align-middle text-center" style="width: 15%">Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% orders.forEach(order => { %>
                                    <% order.orderItems.forEach(item => { %>
                                        <tr>
                                            <td class="align-middle text-center">
                                                <% if (item.product && item.product.productImage && item.product.productImage.length > 0) { %>
                                                    <img src="/uploads/re-image/<%= item.product.productImage[0] %>" 
                                                         alt="<%= item.product.productName %>" 
                                                         class="img-fluid"
                                                         style="width: 50px; height: 50px; object-fit: cover;">
                                                <% } else { %>
                                                    <div class="text-muted small">
                                                        No Image
                                                    </div>
                                                <% } %>
                                            </td>
                                            <td class="align-middle">
                                                <div class="d-flex flex-column">
                                                    <span class="fw-medium">
                                                        <%= item.product ? item.product.productName : 'Product Unavailable' %>
                                                    </span>
                                                    <% if (item.product && item.product.brand) { %>
                                                        <small class="text-muted"><%= item.product.brand %></small>
                                                    <% } %>
                                                </div>
                                            </td>
                                            <td class="align-middle">
                                                <div class="d-flex flex-column">
                                                    <span class="fw-medium">
                                                        <% if (order.userId && order.userId.firstName) { %>
                                                            <%= order.userId.firstName %> <%= order.userId.lastName || '' %>
                                                        <% } else { %>
                                                            N/A
                                                        <% } %>
                                                    </span>
                                                    <% if (order.userId && order.userId.phone) { %>
                                                        <small class="text-muted"><%= order.userId.phone %></small>
                                                    <% } %>
                                                </div>
                                            </td>
                                            <td class="align-middle text-center fw-medium">
                                                <%= item.quantity %>
                                            </td>
                                            <td class="align-middle text-end fw-medium">
                                                â‚¹<%= (item.price * item.quantity).toLocaleString() %>
                                            </td>
                                            <td class="align-middle">
                                                <select class="form-select form-select-sm status-select" 
                                                        onchange="updateStatus('<%= order._id %>', '<%= item.product._id %>', this.value)"
                                                        <%= ['Cancelled', 'Returned'].includes(item.status) ? 'disabled' : '' %>>
                                                    <option value="Pending" <%= item.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                                    <option value="Processing" <%= item.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                                                    <option value="Shipped" <%= item.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                                    <option value="Delivered" <%= item.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                                    <option value="Return Requested" <%= item.status === 'Return Requested' ? 'selected' : '' %>>Return Requested</option>
                                                    <option value="Returned" <%= item.status === 'Returned' ? 'selected' : '' %>>Returned</option>
                                                    <option value="Cancelled" <%= item.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                                </select>
                                            </td>
                                            <td class="align-middle text-center">
                                                <% if (item.status === 'Cancelled') { %>
                                                    <button class="btn btn-sm btn-secondary w-75" disabled>
                                                        Cancelled
                                                    </button>
                                                <% } else if (item.status === 'Returned') { %>
                                                    <button class="btn btn-sm btn-secondary w-75" disabled>
                                                        Returned
                                                    </button>
                                                <% } else if (item.status === 'Return Requested') { %>
                                                    <button class="btn btn-sm btn-success w-75" 
                                                            onclick="approveReturn('<%= order._id %>', '<%= item.product._id %>', '<%= order.returnReason %>')"
                                                            data-return-reason="<%= order.returnReason %>">
                                                        Approve Return
                                                    </button>
                                                <% } else { %>
                                                    <button class="btn btn-sm btn-danger w-75" 
                                                            onclick="cancelOrderItem('<%= order._id %>', '<%= item.product._id %>', this)"
                                                            <%= ['Delivered', 'Returned'].includes(item.status) ? 'disabled' : '' %>>
                                                        Cancel Item
                                                    </button>
                                                <% } %>
                                            </td>
                                        </tr>
                                    <% }); %>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>

<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.7.32/dist/sweetalert2.all.min.js"></script>

<script>
    async function updateStatus(orderId, productId, status) {
        try {
            const response = await fetch('/admin/orders/updateStatus', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId, productId, status })
            });

            const result = await response.json();
            if (result.success) {
                await Swal.fire({
                    title: 'Success!',
                    text: result.message,
                    icon: 'success',
                    confirmButtonColor: '#3085d6'
                });

                // Disable cancel button and status select if item is delivered or returned
                if (status === 'Delivered' || status === 'Returned') {
                    const row = document.querySelector(`select[onchange="updateStatus('${orderId}', '${productId}', this.value)"]`).closest('tr');
                    const cancelBtn = row.querySelector('.btn-danger');
                    const statusSelect = row.querySelector('.status-select');
                    
                    if (cancelBtn) cancelBtn.disabled = true;
                    if (status === 'Returned') {
                        if (statusSelect) statusSelect.disabled = true;
                        if (cancelBtn) {
                            cancelBtn.className = 'btn btn-sm btn-secondary w-75';
                            cancelBtn.textContent = 'Returned';
                        }
                    }
                }
            } else {
                await Swal.fire({
                    title: 'Error!',
                    text: result.message || 'Failed to update status',
                    icon: 'error',
                    confirmButtonColor: '#d33'
                });
                location.reload();
            }
        } catch (error) {
            console.error('Error:', error);
            await Swal.fire({
                title: 'Error!',
                text: 'Failed to update status',
                icon: 'error',
                confirmButtonColor: '#d33'
            });
        }
    }

    async function approveReturn(orderId, productId, returnReason) {
        try {
            const result = await Swal.fire({
                title: 'Approve Return?',
                html: `
                    <div class="mb-3">
                        <strong>Return Reason:</strong>
                        <p class="text-muted">${returnReason || 'No reason provided'}</p>
                    </div>
                    <p>This will process the refund and update inventory.</p>
                `,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, approve return'
            });

            if (result.isConfirmed) {
                const response = await fetch('/admin/orders/updateStatus', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        orderId,
                        productId,
                        status: 'Returned'
                    })
                });

                const data = await response.json();
                if (data.success) {
                    await Swal.fire({
                        title: 'Success!',
                        text: 'Return approved and refund processed',
                        icon: 'success'
                    });
                    location.reload();
                } else {
                    throw new Error(data.message || 'Failed to approve return');
                }
            }
        } catch (error) {
            console.error('Error:', error);
            await Swal.fire({
                title: 'Error!',
                text: error.message || 'Failed to approve return',
                icon: 'error'
            });
        }
    }

    async function cancelOrderItem(orderId, productId, buttonElement) {
        try {
            const result = await Swal.fire({
                title: 'Cancel Item?',
                text: "This will process the refund and update inventory. Are you sure?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, cancel it!'
            });

            if (result.isConfirmed) {
                const response = await fetch('/admin/orders/cancel', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ orderId, productId })
                });

                const data = await response.json();
                if (data.success) {
                    // Disable the cancel button and status select
                    buttonElement.disabled = true;
                    buttonElement.textContent = 'Cancelled';
                    buttonElement.classList.replace('btn-danger', 'btn-secondary');
                    
                    const row = buttonElement.closest('tr');
                    const statusSelect = row.querySelector('.status-select');
                    if (statusSelect) {
                        statusSelect.value = 'Cancelled';
                        statusSelect.disabled = true;
                    }

                    await Swal.fire({
                        title: 'Cancelled!',
                        text: 'The item has been cancelled and refund processed.',
                        icon: 'success'
                    });
                } else {
                    throw new Error(data.message || 'Failed to cancel item');
                }
            }
        } catch (error) {
            console.error('Error:', error);
            await Swal.fire({
                title: 'Error!',
                text: error.message || 'Failed to cancel item',
                icon: 'error'
            });
        }
    }
</script>

<%- include("../partials/admin/footer.ejs") %>
