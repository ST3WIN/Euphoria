<%- include("../../views/partials/user/header.ejs") %>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Check if user is logged in on page load
    document.addEventListener('DOMContentLoaded', function() {
        fetch('/cart')
        .then(response => {
            if (!response.ok) {
                if (response.status === 401) {
                    Swal.fire({
                        title: 'Login Required',
                        text: 'Please login to view your cart',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Login',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/login';
                        } else {
                            window.location.href = '/';
                        }
                    });
                    throw new Error('Login required');
                }
                throw new Error('Network response was not ok');
            }
            return response.text();
        })
        .catch(error => {
            console.error('Error:', error);
        });
    });
</script>

<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>Shopping Cart</h4>
                    <div class="breadcrumb__links">
                        <a href="/">Home</a>
                        <a href="/shop">Shop</a>
                        <span>Shopping Cart</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-8">
                <div class="shopping__cart__table">
                    <table>
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (cartItems && cartItems.length > 0) { %>
                                <% cartItems.forEach(item => { %>
                                    <tr>
                                        <td class="product__cart__item">
                                            <div class="product__cart__item__pic">
                                                <img src="/uploads/re-image/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>" style="max-width: 90px;">
                                            </div>
                                            <div class="product__cart__item__text">
                                                <h6><%= item.productId.productName %></h6>
                                                <!-- Add id and data-price attributes to price element -->
                                                <h5 id="price-<%= item.productId._id %>" data-price="<%= item.price %>">₹<%= item.price.toLocaleString('en-IN') %></h5>
                                            </div>
                                        </td>
                                        <td class="quantity__item">
                                            <div class="quantity">
                                                <div class="pro-qty-2">
                                                    <!-- Add id to quantity input -->
                                                    <input type="number" 
                                                           id="quantity-<%= item.productId._id %>"
                                                           value="<%= item.quantity %>" 
                                                           min="1" 
                                                           max="5"
                                                           onchange="updateQuantity('<%= item.productId._id %>', this.value)"
                                                           style="width: 60px; padding: 5px;">
                                                </div>
                                            </div>
                                        </td>
                                        <!-- Add id to subtotal element -->
                                        <td class="cart__price" id="subtotal-<%= item.productId._id %>">₹<%= item.totalPrice.toLocaleString('en-IN') %></td>
                                        <td class="cart__close">
                                            <i class="fa fa-close" onclick="removeFromCart('<%= item.productId._id %>')"></i>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="4" class="text-center">
                                        <p>Your cart is empty</p>
                                        <div class="continue__btn" style="margin-top: 20px;">
                                            <a href="/shop">Continue Shopping</a>
                                        </div>
                                    </td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                </div>
                <% if (cartItems && cartItems.length > 0) { %>
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-6">
                            <div class="continue__btn">
                                <a href="/shop">Continue Shopping</a>
                            </div>
                        </div>
                    </div>
                <% } %>
            </div>
            <% if (cartItems && cartItems.length > 0) { %>
                <div class="col-lg-4">
                    <div class="cart__total">
                        <h6>Cart total</h6>
                        <ul>
                            <!-- <li>Subtotal <span>₹<%= subtotal.toLocaleString('en-IN') %></span></li> -->
                            <!-- Add id to total element -->
                            <li>Total <span id="cart-total">₹<%= total.toLocaleString('en-IN') %></span></li>
                        </ul>
                        <a href="/checkout" class="primary-btn">Proceed to checkout</a>
                    </div>
                </div>
            <% } %>
        </div>
    </div>
</section>
<%- include("../../views/partials/user/footer.ejs") %>

<script>
    function updateQuantity(productId, quantity) {
        quantity = parseInt(quantity);
        
        if (isNaN(quantity) || quantity < 1) {
            Swal.fire({
                title: 'Invalid Quantity',
                text: 'Please enter a valid quantity (minimum 1)',
                icon: 'error'
            });
            return;
        }
    
        if (quantity > 5) {
            Swal.fire({
                title: 'Quantity Limit Exceeded',
                text: 'Maximum quantity allowed is 5 per product',
                icon: 'warning'
            });
            quantity = 5;
        }
    
        fetch('/update-cart', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                productId: productId,
                quantity: quantity
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // Update quantity display
                updateQuantityDisplay(productId, quantity);
                
                // Update subtotal for this item
                const priceElement = document.querySelector(`#price-${productId}`);
                const price = parseFloat(priceElement.getAttribute('data-price'));
                const subtotal = price * quantity;
                const subtotalElement = document.querySelector(`#subtotal-${productId}`);
                subtotalElement.textContent = `₹${subtotal.toFixed(2)}`;
                
                // Update cart total
                updateCartTotal();
    
                // Show success toast
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: 'Cart updated',
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                throw new Error(data.message || 'Failed to update cart');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error!',
                text: error.message || 'Failed to update cart',
                icon: 'error'
            });
        });
    }
    
    function updateQuantityDisplay(productId, quantity) {
        // Update quantity input
        const quantityInput = document.querySelector(`#quantity-${productId}`);
        if (quantityInput) {
            quantityInput.value = quantity;
        }
    }
    
    function updateCartTotal() {
        // Calculate new cart total
        let total = 0;
        const subtotalElements = document.querySelectorAll('[id^="subtotal-"]');
        subtotalElements.forEach(element => {
            const subtotal = parseFloat(element.textContent.replace('₹', ''));
            if (!isNaN(subtotal)) {
                total += subtotal;
            }
        });
    
        // Update total display
        const cartTotalElement = document.querySelector('#cart-total');
        if (cartTotalElement) {
            cartTotalElement.textContent = `₹${total.toLocaleString('en-IN')}`;
        }
    }

    function removeFromCart(productId) {
        Swal.fire({
            title: 'Remove Item',
            text: 'Are you sure you want to remove this item from cart?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'Cancel'
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/remove-from-cart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({
                        productId: productId
                    })
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        // Remove the item row from the table
                        const itemRow = document.querySelector(`tr:has(#price-${productId})`);
                        if (itemRow) {
                            itemRow.remove();
                        }
    
                        // Update cart total
                        updateCartTotal();
    
                        // Check if cart is empty after removal
                        const remainingItems = document.querySelectorAll('.product__cart__item');
                        if (remainingItems.length === 0) {
                            // Replace table content with empty cart message
                            const tbody = document.querySelector('tbody');
                            tbody.innerHTML = `
                                <tr>
                                    <td colspan="4" class="text-center">
                                        <p>Your cart is empty</p>
                                        <div class="continue__btn" style="margin-top: 20px;">
                                            <a href="/shop">Continue Shopping</a>
                                        </div>
                                    </td>
                                </tr>
                            `;
    
                            // Hide cart total section
                            const cartTotalSection = document.querySelector('.cart__total').parentElement;
                            if (cartTotalSection) {
                                cartTotalSection.style.display = 'none';
                            }
                        }
    
                        // Show success toast
                        Swal.fire({
                            toast: true,
                            position: 'top-end',
                            icon: 'success',
                            title: 'Item removed from cart',
                            showConfirmButton: false,
                            timer: 1500
                        });
                    } else {
                        throw new Error(data.message || 'Failed to remove item from cart');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: error.message || 'Failed to remove item from cart',
                        icon: 'error'
                    });
                });
            }
        });
    }
</script>