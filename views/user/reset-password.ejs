<%- include("../../views/partials/user/header.ejs") %>

<style>
    .errorMessage {
        color: red;
        font-size: 0.75rem;
        display: none;
    }
    .password-container {
        position: relative;
    }
    .password-toggle {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        border: none;
        background: none;
        cursor: pointer;
        padding: 0;
    }
    .password-toggle svg {
        width: 20px;
        height: 20px;
        color: #757575;
    }
</style>

<div class="container">
    <div class="row">
        <div class="col-12 col-sm-12 col-md-6 col-lg-6 main-col offset-md-3">
            <div class="mb-4">
                <form
                    method="post"
                    action="/reset-password"
                    id="resetPasswordForm"
                    accept-charset="UTF-8"
                    class="contact-form">
                    <div class="row">
                        <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                <label for="newPassword">New Password</label>
                                <div class="password-container">
                                    <input
                                        type="password"
                                        name="newPassword"
                                        placeholder="Enter your new password"
                                        id="newPassword"
                                    />
                                    <button type="button" class="password-toggle" id="newPasswordToggle" aria-label="Toggle password visibility">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="eye-icon">
                                            <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z"/>
                                            <circle cx="12" cy="12" r="3"/>
                                        </svg>
                                    </button>
                                </div>
                                <div id="newPasswordError" class="errorMessage"></div>
                            </div>
                        </div>
                        <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                            <div class="form-group">
                                <label for="confirmPassword">Confirm Password</label>
                                <div class="password-container">
                                    <input
                                        type="password"
                                        name="confirmPassword"
                                        placeholder="Confirm your new password"
                                        id="confirmPassword"
                                    />
                                    <button type="button" class="password-toggle" id="confirmPasswordToggle" aria-label="Toggle password visibility">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="eye-icon">
                                            <path d="M2 12s3-7 10-7 10 7 10 7-3 7-10 7-10-7-10-7Z"/>
                                            <circle cx="12" cy="12" r="3"/>
                                        </svg>
                                    </button>
                                </div>
                                <div id="confirmPasswordError" class="errorMessage"></div>
                            </div>
                        </div>
                        <%if(locals.message && message.length>0){%>
                            <div class="text text-danger text-center">
                                <%=message%>
                            </div>
                        <%}%>
                    </div>
                    <div class="row">
                        <div class="text-center col-12 col-sm-12 col-md-12 col-lg-12">
                            <input
                                type="submit"
                                class="btn mb-3"
                                value="Reset Password"
                            />
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<%- include("../../views/partials/user/footer.ejs") %>

<script>
    const newPasswordId = document.getElementById("newPassword");
    const confirmPasswordId = document.getElementById("confirmPassword");
    const newPasswordToggle = document.getElementById("newPasswordToggle");
    const confirmPasswordToggle = document.getElementById("confirmPasswordToggle");

    const newPasswordError = document.getElementById("newPasswordError");
    const confirmPasswordError = document.getElementById("confirmPasswordError");

    const resetPasswordForm = document.getElementById("resetPasswordForm");

    // Password toggle functionality
    newPasswordToggle.addEventListener("click", function() {
        const type = newPasswordId.getAttribute("type") === "password" ? "text" : "password";
        newPasswordId.setAttribute("type", type);
    });

    confirmPasswordToggle.addEventListener("click", function() {
        const type = confirmPasswordId.getAttribute("type") === "password" ? "text" : "password";
        confirmPasswordId.setAttribute("type", type);
    });

    function validatePassword(password) {
        // Password must contain at least:
        // 8 characters
        // 1 uppercase letter
        // 1 lowercase letter
        // 1 number
        // 1 special character
        const passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
        return passwordPattern.test(password);
    }

    function newPasswordValidate() {
        const passVal = newPasswordId.value;

        if (passVal.trim() === "") {
            newPasswordError.style.display = "block";
            newPasswordError.innerHTML = "Password cannot be empty";
            return false;
        } else if (!validatePassword(passVal)) {
            newPasswordError.style.display = "block";
            newPasswordError.innerHTML = "Password must be at least 8 characters long and contain at least one uppercase letter, one lowercase letter, one number, and one special character";
            return false;
        } else {
            newPasswordError.style.display = "none";
            newPasswordError.innerHTML = "";
            return true;
        }
    }

    function confirmPasswordValidate() {
        const confirmVal = confirmPasswordId.value;
        const newVal = newPasswordId.value;

        if (confirmVal.trim() === "") {
            confirmPasswordError.style.display = "block";
            confirmPasswordError.innerHTML = "Confirm password cannot be empty";
            return false;
        } else if (confirmVal !== newVal) {
            confirmPasswordError.style.display = "block";
            confirmPasswordError.innerHTML = "Passwords do not match";
            return false;
        } else {
            confirmPasswordError.style.display = "none";
            confirmPasswordError.innerHTML = "";
            return true;
        }
    }

    document.addEventListener("DOMContentLoaded", () => {
        resetPasswordForm.addEventListener("submit", (e) => {
            // Clear previous error messages
            newPasswordError.style.display = "none";
            confirmPasswordError.style.display = "none";

            const isNewPasswordValid = newPasswordValidate();
            const isConfirmPasswordValid = confirmPasswordValidate();

            if (!isNewPasswordValid || !isConfirmPasswordValid) {
                e.preventDefault();
            }
        });

        // Add real-time validation on blur
        newPasswordId.addEventListener("blur", newPasswordValidate);
        confirmPasswordId.addEventListener("blur", confirmPasswordValidate);
    });
</script>