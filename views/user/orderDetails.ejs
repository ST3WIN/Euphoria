<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/bootstrap.min.css" type="text/css">
    <style>
        body { background-color: #f8f9fa; }
        .card { border: none; box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15); }
        .table { margin-bottom: 0; }
        .table th { border-top: none; }
        .product-img { width: 60px; height: 60px; object-fit: cover; border-radius: 8px; }
        .badge { font-size: 0.9em; padding: 0.5em 0.75em; }
        .info-box { background-color: #f8f9fa; border-radius: 8px; padding: 1.5rem; margin-bottom: 1rem; }
        .status-badge { font-size: 0.8em; padding: 0.4em 0.6em; margin-top: 0.5rem; }
        .cancel-btn { font-size: 0.9em; padding: 0.3em 0.6em; }
    </style>
</head>

<div class="container my-5">
    <div class="card">
        <div class="card-body p-4">
            <!-- Order Header -->
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h4 class="mb-1">Order #<%= order.orderId %></h4>
                    <p class="text-muted mb-0"><i class="fas fa-calendar-alt me-2"></i><%= formatDate(order.createdOn) %></p>
                </div>
                <div>
                    <a href="/orders/invoice/<%= order._id %>" class="btn btn-primary">
                        <i class="fas fa-download me-2"></i>Download Invoice
                    </a>
                </div>
            </div>

            <!-- Order Items -->
            <div class="table-responsive mb-4">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Product</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <!-- <th>Status</th> -->
                            <th class="text-end">Total</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% order.orderItems.forEach(item => { %>
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <img src="/uploads/re-image/<%= item.product.productImage[0] %>" 
                                             alt="<%= item.product.productName %>"
                                             class="me-3 product-img">
                                        <span><%= item.product.productName %></span>
                                    </div>
                                </td>
                                <td>₹<%= item.price.toLocaleString('en-IN') %></td>
                                <td><%= item.quantity %></td>
                                <!-- <td>
                                    <span class="badge <%= getStatusBadgeClass(item.status || order.status) %>">
                                        <i class="fas fa-circle me-1"></i><%= item.status || order.status %>
                                    </span>
                                </td> -->
                                <td class="text-end">₹<%= (item.price * item.quantity).toLocaleString('en-IN') %></td>
                                <td>
                                    <% if ((item.status || order.status) !== 'Delivered' && (item.status || order.status) !== 'Cancelled') { %>
                                        <button onclick="confirmCancelItem('<%= order._id %>', '<%= item.product._id %>', '<%= item.product.productName %>')" 
                                                class="btn btn-danger btn-sm cancel-btn">
                                            <i class="fas fa-times me-1"></i>Cancel
                                        </button>
                                    <% } %>
                                </td>
                            </tr>
                        <% }); %>
                    </tbody>
                </table>
            </div>

            <!-- Order Summary -->
            <div class="bg-light p-3 rounded mb-4">
                <div class="row">
                    <div class="col-md-6 offset-md-6">
                        <table class="table table-sm table-borderless mb-0">
                            <tr>
                                <td>Subtotal:</td>
                                <td class="text-end">₹<%= order.totalPrice.toLocaleString('en-IN') %></td>
                            </tr>
                            <% if (order.discount > 0) { %>
                                <tr>
                                    <td>Discount:</td>
                                    <td class="text-end text-success">-₹<%= order.discount.toLocaleString('en-IN') %></td>
                                </tr>
                            <% } %>
                            <tr class="fw-bold">
                                <td>Total Amount:</td>
                                <td class="text-end">₹<%= order.finalAmount.toLocaleString('en-IN') %></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>

            <!-- Payment and Shipping Information -->
            <div class="row">
                <div class="col-md-6 mb-3 mb-md-0">
                    <div class="info-box">
                        <h6 class="mb-3"><i class="fas fa-credit-card me-2"></i>Payment Information</h6>
                        <p class="mb-1"><strong>Method:</strong> <%= order.paymentMethod %></p>
                        <p class="mb-1"><strong>Payment Status:</strong> <%= order.paymentStatus %></p>
                        <% if (order.razorpayPaymentId) { %>
                            <p class="mb-0"><strong>Payment ID:</strong> <%= order.razorpayPaymentId %></p>
                        <% } %>
                        <% if (order.paymentStatus === 'Failed') { %>
                            <button onclick="retryPayment('<%= order._id %>', <%= order.finalAmount %>)" class="btn btn-warning mt-3">
                                <i class="fas fa-sync-alt me-2"></i>Retry Payment
                            </button>
                        <% } %>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="info-box">
                        <h6 class="mb-3"><i class="fas fa-shipping-fast me-2"></i>Shipping Address</h6>
                        <p class="mb-0">
                            <strong><%= order.address[0].name %></strong><br>
                            <%= order.address[0].place %><br>
                            <%= order.address[0].city %>, <%= order.address[0].state %> <%= order.address[0].pincode %><br>
                            <i class="fas fa-phone me-1"></i><%= order.address[0].phone %>
                            <% if (order.address[0].altPhone) { %>
                                <br><i class="fas fa-phone me-1"></i><%= order.address[0].altPhone %> (Alternative)
                            <% } %>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

    async function confirmCancelItem(orderId, productId, productName) {
        try {
            const result = await Swal.fire({
                title: 'Cancel Item?',
                html: `Are you sure you want to cancel <strong>${productName}</strong>?<br>The refund will be processed to your wallet.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, cancel it!',
                cancelButtonText: 'No, keep it'
            });

            if (result.isConfirmed) {
                const response = await fetch(`/order/cancel-item/${orderId}/${productId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        title: 'Cancelled!',
                        html: `The item has been cancelled.<br>₹${data.refundAmount.toLocaleString('en-IN')} will be refunded to your wallet.`,
                        icon: 'success'
                    });
                    location.reload();
                } else {
                    throw new Error(data.message || 'Failed to cancel item');
                }
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error!',
                text: error.message || 'Failed to cancel item',
                icon: 'error'
            });
        }
    }

    async function retryPayment(orderId, amount) {
        try {
            // Create new Razorpay order
            const response = await fetch('/order/create-razorpay-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    orderId: orderId,
                    amount: amount
                })
            });

            const data = await response.json();
            if (!data.success) {
                throw new Error(data.message);
            }

            const options = {
                key: data.key,
                amount: amount * 100,
                currency: "INR",
                name: "Euphoria",
                description: "Retry Payment for Failed Order",
                order_id: data.orderId,
                handler: async function (response) {
                    try {
                        const verifyResponse = await fetch('/order/verify-payment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_signature: response.razorpay_signature,
                                orderId: orderId,
                                finalAmount: amount
                            })
                        });

                        const verifyData = await verifyResponse.json();
                        if (verifyData.success) {
                            await Swal.fire({
                                icon: 'success',
                                title: 'Payment Successful!',
                                text: 'Your order has been confirmed.',
                                confirmButtonColor: '#3399cc'
                            });
                            window.location.reload();
                        } else {
                            throw new Error(verifyData.message);
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: error.message || 'Payment verification failed. Please try again.',
                            confirmButtonColor: '#3399cc'
                        });
                    }
                },
                prefill: {
                    name: "<%= order.address[0].name %>",
                    contact: "<%= order.address[0].phone %>"
                },
                theme: {
                    color: "#3399cc"
                },
                modal: {
                    ondismiss: function() {
                        Swal.fire({
                            icon: 'warning',
                            title: 'Payment Cancelled',
                            text: 'You cancelled the payment process.',
                            confirmButtonColor: '#3399cc'
                        });
                    }
                }
            };

            const rzp = new Razorpay(options);
            rzp.open();

        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to initiate payment. Please try again.',
                confirmButtonColor: '#3399cc'
            });
        }
    }
</script>
</body>
</html>